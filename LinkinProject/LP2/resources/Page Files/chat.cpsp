<%@ page
    contentType="text/html"
    form="false"
    namespace=""
    class="chat"
    precondition="checkModified(request)"%><%@    impl include="Poco/DateTime.h"
         include="Poco/DateTimeParser.h"
         include="Poco/DateTimeFormatter.h"
         include="Poco/DateTimeFormat.h"%><%!

// .\Pages\chat.html
static const unsigned char data[] = {
	0x09, 0x3C, 0x62, 0x6F, 0x64, 0x79, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x64, 0x69, 0x76, 0x20, 0x69, 
	0x64, 0x3D, 0x22, 0x46, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 
	0x09, 0x3C, 0x48, 0x31, 0x20, 0x61, 0x6C, 0x69, 0x67, 0x6E, 0x3D, 0x22, 0x20, 0x63, 0x65, 0x6E, 0x74, 
	0x65, 0x72, 0x22, 0x3E, 0x3C, 0x69, 0x6D, 0x67, 0x20, 0x73, 0x72, 0x63, 0x3D, 0x22, 0x6C, 0x6F, 0x67, 
	0x6F, 0x2E, 0x6A, 0x70, 0x67, 0x22, 0x20, 0x61, 0x6C, 0x74, 0x3D, 0x22, 0x73, 0x6F, 0x6D, 0x65, 0x5F, 
	0x74, 0x65, 0x78, 0x74, 0x22, 0x3E, 0x3C, 0x2F, 0x48, 0x31, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x2F, 
	0x64, 0x69, 0x76, 0x3E, 0x09, 0x09, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 0x64, 0x69, 0x76, 0x20, 0x69, 0x64, 
	0x3D, 0x22, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x62, 0x6C, 0x65, 0x32, 0x22, 0x3E, 0x0D, 0x0A, 0x09, 
	0x09, 0x09, 0x3C, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x3E, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 
	0x74, 0x72, 0x3E, 0x20, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x74, 0x64, 0x3E, 0x0D, 0x0A, 
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x64, 0x69, 0x76, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x63, 0x68, 
	0x61, 0x74, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x22, 0x3E, 0x3C, 0x2F, 0x64, 0x69, 0x76, 0x3E, 0x0D, 
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x74, 0x64, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 
	0x09, 0x3C, 0x74, 0x64, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x64, 0x69, 0x76, 
	0x20, 0x69, 0x64, 0x3D, 0x22, 0x4F, 0x6E, 0x6C, 0x69, 0x6E, 0x65, 0x42, 0x6F, 0x78, 0x22, 0x3E, 0x0D, 
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x64, 0x69, 0x76, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 
	0x09, 0x09, 0x09, 0x3C, 0x2F, 0x74, 0x64, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x74, 
	0x72, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x74, 0x72, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 
	0x09, 0x09, 0x3C, 0x74, 0x64, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x74, 0x65, 
	0x78, 0x74, 0x61, 0x72, 0x65, 0x61, 0x20, 0x6D, 0x61, 0x78, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x3D, 
	0x22, 0x33, 0x32, 0x30, 0x22, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x54, 0x78, 0x54, 0x42, 0x6F, 0x78, 0x22, 
	0x20, 0x74, 0x79, 0x70, 0x65, 0x3D, 0x22, 0x74, 0x65, 0x78, 0x74, 0x22, 0x20, 0x73, 0x74, 0x79, 0x6C, 
	0x65, 0x3D, 0x22, 0x72, 0x65, 0x73, 0x69, 0x7A, 0x65, 0x3A, 0x6E, 0x6F, 0x6E, 0x65, 0x22, 0x20, 0x6E, 
	0x61, 0x6D, 0x65, 0x3D, 0x22, 0x54, 0x78, 0x54, 0x42, 0x6F, 0x78, 0x22, 0x20, 0x6F, 0x6E, 0x6B, 0x65, 
	0x79, 0x70, 0x72, 0x65, 0x73, 0x73, 0x3D, 0x22, 0x69, 0x66, 0x28, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x2E, 
	0x6B, 0x65, 0x79, 0x43, 0x6F, 0x64, 0x65, 0x20, 0x3D, 0x3D, 0x20, 0x31, 0x33, 0x29, 0x7B, 0x20, 0x66, 
	0x75, 0x6E, 0x63, 0x32, 0x28, 0x29, 0x3B, 0x7D, 0x22, 0x3E, 0x3C, 0x2F, 0x74, 0x65, 0x78, 0x74, 0x61, 
	0x72, 0x65, 0x61, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x74, 0x64, 0x3E, 0x0D, 
	0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x74, 0x64, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 
	0x09, 0x3C, 0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x53, 0x65, 0x6E, 0x64, 
	0x42, 0x75, 0x74, 0x74, 0x6F, 0x6E, 0x22, 0x20, 0x6F, 0x6E, 0x63, 0x6C, 0x69, 0x63, 0x6B, 0x3D, 0x22, 
	0x66, 0x75, 0x6E, 0x63, 0x32, 0x28, 0x29, 0x3B, 0x22, 0x20, 0x20, 0x6F, 0x6E, 0x6B, 0x65, 0x79, 0x70, 
	0x72, 0x65, 0x73, 0x73, 0x3D, 0x22, 0x69, 0x66, 0x28, 0x65, 0x76, 0x65, 0x6E, 0x74, 0x2E, 0x6B, 0x65, 
	0x79, 0x43, 0x6F, 0x64, 0x65, 0x20, 0x3D, 0x3D, 0x20, 0x31, 0x33, 0x29, 0x7B, 0x20, 0x66, 0x75, 0x6E, 
	0x63, 0x32, 0x28, 0x29, 0x3B, 0x20, 0x7D, 0x22, 0x3E, 0x53, 0x65, 0x6E, 0x64, 0x21, 0x3C, 0x2F, 0x42, 
	0x75, 0x74, 0x74, 0x6F, 0x6E, 0x3E, 0x3C, 0x62, 0x72, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x09, 
	0x3C, 0x2F, 0x74, 0x64, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x74, 0x72, 0x3E, 0x0D, 
	0x0A, 0x09, 0x09, 0x09, 0x3C, 0x2F, 0x74, 0x61, 0x62, 0x6C, 0x65, 0x3E, 0x0D, 0x0A, 0x09, 0x09, 0x3C, 
	0x2F, 0x64, 0x69, 0x76, 0x3E, 0x0D, 0x0A, 0x09, 0x3C, 0x2F, 0x62, 0x6F, 0x64, 0x79, 0x3E, 0x0D, 0x0A, 
	0x3C, 0x2F, 0x68, 0x74, 0x6D, 0x6C, 0x3E, 
};


static bool checkModified(Poco::Net::HTTPServerRequest& request)
{
	Poco::DateTime modified(2014, 6, 26, 18, 47, 19);
	request.response().setChunkedTransferEncoding(false);
	request.response().set("Last-Modified", Poco::DateTimeFormatter::format(modified, Poco::DateTimeFormat::HTTP_FORMAT));
	if (request.has("If-Modified-Since"))
	{
		Poco::DateTime modifiedSince;
		int tzd;
		Poco::DateTimeParser::parse(request.get("If-Modified-Since"), modifiedSince, tzd);
		if (modified <= modifiedSince)
		{
			request.response().setContentLength(0);
			request.response().setStatusAndReason(Poco::Net::HTTPResponse::HTTP_NOT_MODIFIED);
			request.response().send();
			return false;
		}
	}
	request.response().setContentLength(static_cast<int>(sizeof(data)));
	return true;
}
%><%
	responseStream.write(reinterpret_cast<const char*>(data), sizeof(data));
%>